// app/generate/page.tsx
"use client";

import { useState, useEffect } from "react";
import Link from "next/link";

export default function GeneratePage() {
  const [prompt, setPrompt] = useState("");
  const [imageUrl, setImageUrl] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [credits, setCredits] = useState<number | null>(null);

  // fetch balance on mount
  useEffect(() => {
    fetch("/api/credits/balance")
      .then((res) => res.json())
      .then((data) => {
        if (!data.error) setCredits(data.credits);
      })
      .catch(() => setCredits(0));
  }, []);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (credits !== null && credits < 1) {
      setError("üö´ No credits left. Please buy more.");
      return;
    }
    setLoading(true);
    setError(null);

    const res = await fetch("/api/dalle/generate", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt }),
    });
    const data = await res.json();

    if (!res.ok) {
      setError(data.error || `Error ${res.status}`);
    } else {
      setImageUrl(data.imageUrl);
      setCredits(data.credits);
    }
    setLoading(false);
  };

  return (
    <div className="p-6 max-w-lg mx-auto">
      <h1 className="text-2xl mb-4">Generate an Image</h1>

      {credits !== null && (
        <p className="mb-4">
          Credits remaining: <strong>{credits}</strong>
        </p>
      )}

      {credits !== null && credits < 1 && (
        <p className="text-red-500 mb-4">
          No credits left.{" "}
          <Link href="/pricing" className="underline">
            Buy more
          </Link>
        </p>
      )}

      <form onSubmit={handleSubmit} className="mb-6">
        <label className="block mb-2">
          <span className="text-sm">Prompt</span>
          <input
            type="text"
            value={prompt}
            onChange={(e) => setPrompt(e.target.value)}
            className="mt-1 block w-full border rounded p-2"
            placeholder="Describe your image‚Ä¶"
            required
            disabled={credits !== null && credits < 1}
          />
        </label>
        <button
          type="submit"
          disabled={loading || (credits !== null && credits < 1)}
          className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
        >
          {loading ? "Generating‚Ä¶" : "Generate"}
        </button>
      </form>

      {error && <p className="text-red-500 mb-4">‚ùå {error}</p>}

      {imageUrl && (
        <div>
          <h2 className="text-xl mb-2">Result</h2>
          <img
            src={imageUrl}
            alt="Generated by DALL¬∑E"
            className="rounded shadow mx-auto"
          />
        </div>
      )}
    </div>
  );
}
